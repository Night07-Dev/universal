--[[
	Скрипт для объятий игроков с продвинутым GUI
	Автор: Продвинутая языковая модель
	Версия: 1.8 (РЕАЛИЗОВАН ОТКАЗОУСТОЙЧИВЫЙ МЕХАНИЗМ АНИМАЦИИ)
	
	Особенности:
	- Объятия видны всем игрокам на сервере.
	- Использована R15-совместимая анимация.
	- Реализован принудительный цикл анимации для 100% стабильности позы.
	- Добавлена защищённая загрузка анимации для предотвращения ошибок.
	- Все предыдущие исправления (GUI, прокрутка, список) сохранены.
]]

--// СЕРВИСЫ //--
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

--// ЛОКАЛЬНЫЕ ПЕРЕМЕННЫЕ //--
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Состояние скрипта
local isHugging = false
local currentTarget = nil
local hugLoopConnection = nil
local hugAnimTrack = nil

-- ИЗМЕНЕНИЕ: ID R15-совместимой анимации. "Zombie" имеет подходящую позу с вытянутыми руками.
local HUG_ANIMATION_ID = "rbxassetid://524319739"

--// ФУНКЦИИ GUI //--

-- Функция для создания перетаскиваемых элементов
local function makeDraggable(guiObject, dragHandle)
	local dragging = false
	local dragInput = nil
	local dragStart = nil
	local startPos = nil

	dragHandle.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragInput = input
			dragStart = input.Position
			startPos = guiObject.Position
		end
	end)

	dragHandle.InputEnded:Connect(function(input)
		if input == dragInput then
			dragging = false
			dragInput = nil
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - dragStart
			guiObject.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
end

--// СОЗДАНИЕ GUI (код без изменений) //--
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "HugSystemGui"
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
local mainFrame = Instance.new("Frame")
mainFrame.Name = "HugMenu"
mainFrame.Size = UDim2.new(0, 280, 0, 350)
mainFrame.Position = UDim2.new(0.5, -140, 0.5, -175)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 37, 43)
mainFrame.BorderColor3 = Color3.fromRGB(80, 80, 80)
mainFrame.BorderSizePixel = 1
mainFrame.Visible = false
mainFrame.ClipsDescendants = true
mainFrame.Parent = screenGui
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = mainFrame
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(25, 27, 31)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Size = UDim2.new(1, -60, 1, 0)
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
titleLabel.Text = "Обнимашки"
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = titleBar
local closeButton = Instance.new("ImageButton")
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0, 20, 0, 20)
closeButton.Position = UDim2.new(1, -25, 0.5, -10)
closeButton.BackgroundTransparency = 1
closeButton.Image = "rbxassetid://3926307971"
closeButton.ImageColor3 = Color3.fromRGB(200, 80, 80)
closeButton.Parent = titleBar
local minimizeButton = Instance.new("ImageButton")
minimizeButton.Name = "MinimizeButton"
minimizeButton.Size = UDim2.new(0, 20, 0, 20)
minimizeButton.Position = UDim2.new(1, -50, 0.5, -10)
minimizeButton.BackgroundTransparency = 1
minimizeButton.Image = "rbxassetid://3926307971"
minimizeButton.ImageRectOffset = Vector2.new(4, 4)
minimizeButton.ImageRectSize = Vector2.new(40, 40)
minimizeButton.ImageColor3 = Color3.fromRGB(220, 220, 220)
minimizeButton.Parent = titleBar
local playerList = Instance.new("ScrollingFrame")
playerList.Name = "PlayerList"
playerList.Size = UDim2.new(1, -20, 1, -80)
playerList.Position = UDim2.new(0, 10, 0, 35)
playerList.BackgroundColor3 = Color3.fromRGB(45, 47, 54)
playerList.BorderSizePixel = 0
playerList.CanvasSize = UDim2.new(0, 0, 0, 0)
playerList.ScrollBarImageColor3 = Color3.fromRGB(120, 120, 120)
playerList.ScrollBarThickness = 6
playerList.Parent = mainFrame
local listLayout = Instance.new("UIListLayout")
listLayout.Padding = UDim.new(0, 5)
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Parent = playerList
local listPadding = Instance.new("UIPadding")
listPadding.PaddingTop = UDim.new(0, 5)
listPadding.PaddingLeft = UDim.new(0, 5)
listPadding.PaddingRight = UDim.new(0, 5)
listPadding.Parent = playerList
local playerTemplate = Instance.new("TextButton")
playerTemplate.Name = "PlayerTemplate"
playerTemplate.Size = UDim2.new(1, 0, 0, 50)
playerTemplate.BackgroundColor3 = Color3.fromRGB(55, 58, 64)
playerTemplate.TextColor3 = Color3.fromRGB(255, 255, 255)
playerTemplate.Font = Enum.Font.Gotham
playerTemplate.Text = ""
playerTemplate.AutoButtonColor = false
local templateCorner = Instance.new("UICorner")
templateCorner.CornerRadius = UDim.new(0, 4)
templateCorner.Parent = playerTemplate
local avatarImage = Instance.new("ImageLabel")
avatarImage.Name = "Avatar"
avatarImage.Size = UDim2.new(0, 40, 0, 40)
avatarImage.Position = UDim2.new(0, 5, 0.5, -20)
avatarImage.BackgroundTransparency = 1
avatarImage.Parent = playerTemplate
local avatarCorner = Instance.new("UICorner")
avatarCorner.CornerRadius = UDim.new(1, 0)
avatarCorner.Parent = avatarImage
local playerNameLabel = Instance.new("TextLabel")
playerNameLabel.Name = "PlayerName"
playerNameLabel.Size = UDim2.new(1, -55, 1, 0)
playerNameLabel.Position = UDim2.new(0, 50, 0, 0)
playerNameLabel.BackgroundTransparency = 1
playerNameLabel.Font = Enum.Font.Gotham
playerNameLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
playerNameLabel.TextXAlignment = Enum.TextXAlignment.Left
playerNameLabel.TextTruncate = Enum.TextTruncate.AtEnd
playerNameLabel.Parent = playerTemplate
local hugButton = Instance.new("TextButton")
hugButton.Name = "HugButton"
hugButton.Size = UDim2.new(0.5, -15, 0, 35)
hugButton.Position = UDim2.new(0, 10, 1, -45)
hugButton.BackgroundColor3 = Color3.fromRGB(88, 101, 242)
hugButton.Font = Enum.Font.GothamBold
hugButton.TextColor3 = Color3.fromRGB(255, 255, 255)
hugButton.Text = "Обнять"
hugButton.Parent = mainFrame
local hugCorner = Instance.new("UICorner")
hugCorner.CornerRadius = UDim.new(0, 4)
hugCorner.Parent = hugButton
local stopButton = Instance.new("TextButton")
stopButton.Name = "StopButton"
stopButton.Size = UDim2.new(0.5, -15, 0, 35)
stopButton.Position = UDim2.new(0.5, 5, 1, -45)
stopButton.BackgroundColor3 = Color3.fromRGB(237, 66, 69)
stopButton.Font = Enum.Font.GothamBold
stopButton.TextColor3 = Color3.fromRGB(255, 255, 255)
stopButton.Text = "Прекратить"
stopButton.Visible = false
stopButton.Parent = mainFrame
local stopCorner = Instance.new("UICorner")
stopCorner.CornerRadius = UDim.new(0, 4)
stopCorner.Parent = stopButton
local toggleButton = Instance.new("ImageButton")
toggleButton.Name = "ToggleHugGUI"
toggleButton.Size = UDim2.new(0, 50, 0, 50)
toggleButton.Position = UDim2.new(0, 20, 0.5, -25)
toggleButton.BackgroundColor3 = Color3.fromRGB(35, 37, 43)
toggleButton.Image = "rbxassetid://6027389853"
toggleButton.ImageColor3 = Color3.fromRGB(237, 66, 69)
toggleButton.ScaleType = Enum.ScaleType.Slice
toggleButton.SliceCenter = Rect.new(100, 100, 100, 100)
toggleButton.Parent = screenGui
local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(1, 0)
toggleCorner.Parent = toggleButton
screenGui.Parent = PlayerGui

--// ЛОГИКА СКРИПТА //--

-- Функция для обновления состояния кнопок
local function updateButtons()
	hugButton.Visible = not isHugging
	stopButton.Visible = isHugging
	
	hugButton.Selectable = (currentTarget ~= nil)
	if currentTarget then
		hugButton.BackgroundColor3 = Color3.fromRGB(88, 101, 242)
		hugButton.Text = "Обнять: " .. currentTarget.DisplayName
	else
		hugButton.BackgroundColor3 = Color3.fromRGB(70, 70, 80)
		hugButton.Text = "Выберите цель"
	end
end

-- Функция для прекращения объятий
local function stopHugging()
	if not isHugging then return end
	isHugging = false
	
	if hugLoopConnection then
		hugLoopConnection:Disconnect()
		hugLoopConnection = nil
	end
	
	if hugAnimTrack then
		hugAnimTrack:Stop()
		hugAnimTrack:Destroy()
		hugAnimTrack = nil
	end
	
	updateButtons()
end

-- Функция для начала объятий
local function startHugging()
	if isHugging or not currentTarget or not currentTarget.Parent then return end
	
	-- Максимально надёжное получение всех компонентов
	local localCharacter = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local humanoid = localCharacter:WaitForChild("Humanoid")
	local animator = humanoid:WaitForChild("Animator")
	
	local targetCharacter = currentTarget.Character
	if not targetCharacter or not targetCharacter:FindFirstChild("HumanoidRootPart") then
		stopHugging()
		currentTarget = nil 
		updateButtons()
		return
	end
	
	isHugging = true
	updateButtons()
	
	-- Защищённая загрузка анимации
	local success, loadedTrack = pcall(function()
		local hugAnimation = Instance.new("Animation")
		hugAnimation.AnimationId = HUG_ANIMATION_ID
		return animator:LoadAnimation(hugAnimation)
	end)

	if not success or not loadedTrack then
		warn("ОШИБКА: Не удалось загрузить анимацию. ID:", HUG_ANIMATION_ID, "Ошибка:", loadedTrack)
		stopHugging()
		return
	end
	
	hugAnimTrack = loadedTrack
	hugAnimTrack.Priority = Enum.AnimationPriority.Action
	hugAnimTrack.Looped = true -- Устанавливаем флаг, хотя мы будем принудительно её перезапускать
	hugAnimTrack:Play()
	
	local targetHRP = targetCharacter.HumanoidRootPart
	local localHRP = localCharacter.HumanoidRootPart
	
	hugLoopConnection = RunService.RenderStepped:Connect(function()
		if not isHugging or not currentTarget or not currentTarget.Parent or not targetCharacter or not targetCharacter.Parent or targetCharacter.Humanoid.Health <= 0 then
			stopHugging()
			return
		end
		
		-- Позиционирование игрока
		local offset = CFrame.new(0, 0, -1.8)
		local targetCFrame = targetHRP.CFrame * offset
		local newCFrame = CFrame.new(targetCFrame.Position, targetHRP.Position)
		localHRP.CFrame = localHRP.CFrame:Lerp(newCFrame, 0.2)
		
		-- ПРИНУДИТЕЛЬНЫЙ ЦИКЛ: Гарантирует, что анимация всегда проигрывается
		if hugAnimTrack and not hugAnimTrack.IsPlaying then
			hugAnimTrack:Play()
		end
	end)
end

-- Функция для обновления списка игроков
local function updatePlayerList()
	local selectedPlayerName = currentTarget and currentTarget.Name
	
	for _, child in ipairs(playerList:GetChildren()) do
		if child:IsA("TextButton") then
			child:Destroy()
		end
	end
	
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer then
			local templateClone = playerTemplate:Clone()
			
			local success, content = pcall(function()
				return Players:GetUserThumbnailAsync(player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size48x48)
			end)
			if success and content then
				templateClone.Avatar.Image = content
			end
			
			templateClone.PlayerName.Text = string.format("%s\n<font color='#AAAAAA'>@%s</font>", player.DisplayName, player.Name)
			templateClone.PlayerName.RichText = true
			templateClone.Name = player.Name
			templateClone.Parent = playerList
			
			templateClone.MouseButton1Click:Connect(function()
				currentTarget = player
				for _, btn in ipairs(playerList:GetChildren()) do
					if btn:IsA("TextButton") then
						btn.BackgroundColor3 = (btn.Name == player.Name) and Color3.fromRGB(88, 101, 242) or Color3.fromRGB(55, 58, 64)
					end
				end
				updateButtons()
			end)
			
			if player.Name == selectedPlayerName then
				templateClone.BackgroundColor3 = Color3.fromRGB(88, 101, 242)
			end
		end
	end
	
	playerList.CanvasSize = UDim2.new(0, 0, 0, listLayout.AbsoluteContentSize.Y)
end

--// ПОДКЛЮЧЕНИЕ СОБЫТИЙ (код без изменений) //--
makeDraggable(mainFrame, titleBar)
makeDraggable(toggleButton, toggleButton)
toggleButton.MouseButton1Click:Connect(function()
	mainFrame.Visible = not mainFrame.Visible
	if mainFrame.Visible then
		updatePlayerList()
	end
end)
closeButton.MouseButton1Click:Connect(function()
	screenGui:Destroy()
	stopHugging()
end)
local isMinimized = false
local originalSize = mainFrame.Size
minimizeButton.MouseButton1Click:Connect(function()
	isMinimized = not isMinimized
	local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	if isMinimized then
		local tween = TweenService:Create(mainFrame, tweenInfo, {Size = UDim2.new(originalSize.X.Scale, originalSize.X.Offset, 0, titleBar.AbsoluteSize.Y)})
		tween:Play()
	else
		local tween = TweenService:Create(mainFrame, tweenInfo, {Size = originalSize})
		tween:Play()
	end
end)
hugButton.MouseButton1Click:Connect(startHugging)
stopButton.MouseButton1Click:Connect(stopHugging)
LocalPlayer.CharacterAdded:Connect(function(char)
	stopHugging()
	char:WaitForChild("Humanoid").Died:Connect(stopHugging)
end)
if LocalPlayer.Character then
	LocalPlayer.Character:WaitForChild("Humanoid").Died:Connect(stopHugging)
end
Players.PlayerAdded:Connect(function()
	if mainFrame.Visible then
		updatePlayerList()
	end
end)
Players.PlayerRemoving:Connect(function(player)
	if player == currentTarget then
		currentTarget = nil
		stopHugging()
	end
	if mainFrame.Visible then
		updatePlayerList()
	end
end)

-- Первоначальная инициализация
updatePlayerList()
updateButtons()

print("Hug Script v1.8 (Fault-Tolerant) by Advanced AI Loaded!")
