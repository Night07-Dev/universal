--[[
	ФИНАЛЬНАЯ ВЕРСИЯ
	Локальный скрипт для создания перетаскиваемой кнопки,
	которая открывает и закрывает консоль разработчика Roblox.
	
	Исправлена проблема с перетаскиванием на мобильных устройствах
	путем переключения на абсолютную пиксельную систему позиционирования во время перетаскивания.
]]

-- Сервисы
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- Переменные состояния
local isDragging = false
local consoleVisible = false
local dragStartPos = nil
local buttonStartPixelPos = nil -- Будем хранить абсолютную позицию кнопки в пикселях
local dragThreshold = 10

-- Создание GUI
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ConsoleToggleGui"
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

-- Создание кнопки
local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ConsoleToggleButton"
toggleButton.Text = "C"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 24
toggleButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
toggleButton.BorderColor3 = Color3.fromRGB(30, 30, 30)
toggleButton.BorderSizePixel = 2
toggleButton.AutoButtonColor = false

-- Размер и НАЧАЛЬНАЯ позиция/якорь
toggleButton.Size = UDim2.fromOffset(45, 45)
toggleButton.Position = UDim2.new(1, -55, 1, -55) -- 55px от правого-нижнего края
toggleButton.AnchorPoint = Vector2.new(1, 1) -- Якорь в правом-нижнем углу

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = toggleButton

toggleButton.Parent = screenGui

-- --- Логика ---

local function toggleConsole()
	consoleVisible = not consoleVisible
	StarterGui:SetCore("DevConsoleVisible", consoleVisible)
end

-- Когда пользователь нажимает на кнопку
toggleButton.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		isDragging = true
		dragStartPos = input.Position
		
		-- ==== КЛЮЧЕВОЕ ИСПРАВЛЕНИЕ ====
		-- 1. Запоминаем текущую абсолютную позицию кнопки в пикселях.
		buttonStartPixelPos = toggleButton.AbsolutePosition
		
		-- 2. Немедленно переключаем позиционирование кнопки на чистый Offset от верхнего левого угла.
		-- Это решает все проблемы с конфликтами Scale и Offset при перетаскивании.
		toggleButton.AnchorPoint = Vector2.new(0, 0)
		toggleButton.Position = UDim2.fromOffset(buttonStartPixelPos.X, buttonStartPixelPos.Y)
		
		-- Визуальный отклик
		toggleButton.BackgroundColor3 = Color3.fromRGB(110, 110, 110)
	end
end)

-- Когда пользователь отпускает палец/кнопку мыши в любом месте экрана
UserInputService.InputEnded:Connect(function(input)
	if isDragging and (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
		isDragging = false
		toggleButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
		
		-- Проверяем, был ли это клик или перетаскивание
		local dragDistance = (input.Position - dragStartPos).Magnitude
		if dragDistance < dragThreshold then
			toggleConsole()
		end
	end
end)

-- Когда пользователь двигает пальцем/мышью
UserInputService.InputChanged:Connect(function(input)
	if isDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		-- Рассчитываем смещение от начальной точки
		local delta = input.Position - dragStartPos
		
		-- Новая позиция = начальная пиксельная позиция + смещение
		local newPixelPos = buttonStartPixelPos + delta
		
		-- Ограничиваем движение в пределах экрана
		local screenBounds = screenGui.AbsoluteSize
		local buttonSize = toggleButton.AbsoluteSize
		
		local clampedX = math.clamp(newPixelPos.X, 0, screenBounds.X - buttonSize.X)
		local clampedY = math.clamp(newPixelPos.Y, 0, screenBounds.Y - buttonSize.Y)
		
		-- Устанавливаем новую позицию в пикселях (т.к. мы уже переключились на AnchorPoint 0,0)
		toggleButton.Position = UDim2.fromOffset(clampedX, clampedY)
	end
end)
